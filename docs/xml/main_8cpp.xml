<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="main_8cpp" kind="file" language="C++">
    <compoundname>main.cpp</compoundname>
    <includes local="no">FEHLCD.h</includes>
    <includes local="no">FEHUtility.h</includes>
    <includes local="no">FEHBuzzer.h</includes>
    <includes local="no">FEHRPS.h</includes>
    <includes local="no">FEHSD.h</includes>
    <includes local="no">FEHServo.h</includes>
    <includes local="no">FEHMotor.h</includes>
    <includes local="no">FEHIO.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">string</includes>
    <incdepgraph>
      <node id="3">
        <label>FEHUtility.h</label>
      </node>
      <node id="7">
        <label>FEHServo.h</label>
      </node>
      <node id="4">
        <label>FEHBuzzer.h</label>
      </node>
      <node id="6">
        <label>FEHSD.h</label>
      </node>
      <node id="11">
        <label>string</label>
      </node>
      <node id="8">
        <label>FEHMotor.h</label>
      </node>
      <node id="2">
        <label>FEHLCD.h</label>
      </node>
      <node id="9">
        <label>FEHIO.h</label>
      </node>
      <node id="1">
        <label>/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp</label>
        <link refid="main_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>FEHRPS.h</label>
      </node>
      <node id="10">
        <label>math.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="main_8cpp_1a98551023ee0bbdb97842ccc8cc02c9ae" prot="public" static="no">
        <name>MOTOR_ANGLE_1</name>
        <initializer>0.0*M_PI/180.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="13" column="9" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8cpp_1a3fd8a66198d2cc848d9edf74fd5a4f8b" prot="public" static="no">
        <name>MOTOR_ANGLE_2</name>
        <initializer>120*M_PI/180.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="14" column="9" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8cpp_1a0d386a0699677dd756378842f078661a" prot="public" static="no">
        <name>MOTOR_ANGLE_3</name>
        <initializer>240*M_PI/180.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="15" column="9" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8cpp_1a0d0de63cb3b2b767719451b355cb94fa" prot="public" static="no">
        <name>MAX_RPM</name>
        <initializer>236.5398195</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="16" column="9" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8cpp_1a4247c7a9cda228f8ccda23206d34235c" prot="public" static="no">
        <name>ENCODER_RES</name>
        <initializer>318.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="17" column="9" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8cpp_1a5400b1f2028d38732e4377be4f32b255" prot="public" static="no">
        <name>DELTA_T</name>
        <initializer>0.1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="18" column="9" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8cpp_1a2db4e618838b95a270b20cfd491ec314" prot="public" static="no">
        <name>COUNTS_PER_INCH</name>
        <initializer>35</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="19" column="9" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8cpp_1a0c09e5677405154c120ab1181f2b886f" prot="public" static="no">
        <name>ERROR_MARGIN</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="20" column="9" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8cpp_1ae3de98cfb030fcb2b962c0d94a60d81d" prot="public" static="no">
        <name>DIST_ERROR_MARGIN</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="21" column="9" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8cpp_1a209bc3f2d686038a06191d088c855f3a" prot="public" static="no">
        <name>NUM_CORR_ITERATIONS</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="22" column="9" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8cpp_1aa4563c6a1149eec45bd4592065313ec8" prot="public" static="no">
        <name>RPS_POS_CORR_SPEED</name>
        <initializer>25</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="23" column="9" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8cpp_1a7b51090cf7d984290db13f309409f82c" prot="public" static="no">
        <name>RPS_HEAD_CORR_SPEED</name>
        <initializer>35</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="24" column="9" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="main_8cpp_1a1128be699587b3c2de49536b3ac83dd0" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float RPS_RAMP_START_X</definition>
        <argsstring></argsstring>
        <name>RPS_RAMP_START_X</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="26" column="7" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a7a7067a29cc04ae3b8fa15b2b78bc9cd" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float RPS_RAMP_START_Y</definition>
        <argsstring></argsstring>
        <name>RPS_RAMP_START_Y</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="27" column="7" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1ade0d230c0cc22b3588f1b88991874b0a" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float RPS_RAMP_START_HEADING</definition>
        <argsstring></argsstring>
        <name>RPS_RAMP_START_HEADING</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="28" column="7" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1ab57c08c9039045e0d2656fd567b5c4c2" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float RPS_LEVERS_X</definition>
        <argsstring></argsstring>
        <name>RPS_LEVERS_X</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="30" column="7" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a58b74395fb43a26e59820634b0fca602" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float RPS_LEVERS_Y</definition>
        <argsstring></argsstring>
        <name>RPS_LEVERS_Y</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="31" column="7" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a07c43c9e2effbf3624c80718bca635c6" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float RPS_LEVERS_HEADING</definition>
        <argsstring></argsstring>
        <name>RPS_LEVERS_HEADING</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="32" column="7" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a688e1af9cff28902766ae8a15da7ebc1" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float RPS_BURGER_X</definition>
        <argsstring></argsstring>
        <name>RPS_BURGER_X</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="34" column="7" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a2ffb2b410a5ea485fe4857c4cd836247" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float RPS_BURGER_Y</definition>
        <argsstring></argsstring>
        <name>RPS_BURGER_Y</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="35" column="7" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a5d88f50a071a174bbbe975200a0523a2" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float forwardTimeOut</definition>
        <argsstring></argsstring>
        <name>forwardTimeOut</name>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="37" column="7" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1ac9b50a344be2172263ad024556debe8a" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float errorCurr1</definition>
        <argsstring></argsstring>
        <name>errorCurr1</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="53" column="7" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1aa6749d05f37d8f5207ebf828823343bf" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float errorCurr2</definition>
        <argsstring></argsstring>
        <name>errorCurr2</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="54" column="7" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a4ac657d6cedb1d41be8f80b7f3caf8fd" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float errorCurr3</definition>
        <argsstring></argsstring>
        <name>errorCurr3</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="55" column="7" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="main_8cpp_1ab120add07e2f6525ff1f93bc68b229ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FEHMotor</type>
        <definition>FEHMotor motor1</definition>
        <argsstring>(FEHMotor::Motor0, 9.0)</argsstring>
        <name>motor1</name>
        <param>
          <type>FEHMotor::Motor0</type>
        </param>
        <param>
          <type>9.</type>
          <declname>0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="39" column="10" declfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" declline="39" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a53c75bdd693274fb69883cd70ed43cad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FEHMotor</type>
        <definition>FEHMotor motor2</definition>
        <argsstring>(FEHMotor::Motor1, 9.0)</argsstring>
        <name>motor2</name>
        <param>
          <type>FEHMotor::Motor1</type>
        </param>
        <param>
          <type>9.</type>
          <declname>0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="40" column="10" declfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" declline="40" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a64a613d4dad66eb75bee8451dc898838" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FEHMotor</type>
        <definition>FEHMotor motor3</definition>
        <argsstring>(FEHMotor::Motor2, 9.0)</argsstring>
        <name>motor3</name>
        <param>
          <type>FEHMotor::Motor2</type>
        </param>
        <param>
          <type>9.</type>
          <declname>0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="41" column="10" declfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" declline="41" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1afc6dfb46ebac0df1735cd679a69618fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DigitalEncoder</type>
        <definition>DigitalEncoder motor1_encoder</definition>
        <argsstring>(FEHIO::P0_0)</argsstring>
        <name>motor1_encoder</name>
        <param>
          <type>FEHIO::P0_0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="43" column="16" declfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" declline="43" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a53d5bb004f7fba065c76285c79261f06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DigitalEncoder</type>
        <definition>DigitalEncoder motor2_encoder</definition>
        <argsstring>(FEHIO::P0_2)</argsstring>
        <name>motor2_encoder</name>
        <param>
          <type>FEHIO::P0_2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="44" column="16" declfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" declline="44" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a5e21db94525f4d6d0e6b309bed175e1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DigitalEncoder</type>
        <definition>DigitalEncoder motor3_encoder</definition>
        <argsstring>(FEHIO::P0_4)</argsstring>
        <name>motor3_encoder</name>
        <param>
          <type>FEHIO::P0_4</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="45" column="16" declfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" declline="45" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1ab3b0ba711f1e66d572420ac0290359e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FEHServo</type>
        <definition>FEHServo jukebox_servo</definition>
        <argsstring>(FEHServo::Servo0)</argsstring>
        <name>jukebox_servo</name>
        <param>
          <type>FEHServo::Servo0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="48" column="10" declfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" declline="48" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a9d5f7037751e2fb7fad19f6803e44022" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FEHServo</type>
        <definition>FEHServo arm_servo</definition>
        <argsstring>(FEHServo::Servo1)</argsstring>
        <name>arm_servo</name>
        <param>
          <type>FEHServo::Servo1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="49" column="10" declfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" declline="49" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a3949168a40f85ea31d5fc2000617af43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>AnalogInputPin</type>
        <definition>AnalogInputPin CdS_cell</definition>
        <argsstring>(FEHIO::P0_6)</argsstring>
        <name>CdS_cell</name>
        <param>
          <type>FEHIO::P0_6</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="51" column="16" declfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" declline="51" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1aaac3ae26d4ce0c3abf9a3b6fdd1334aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float InvPercent</definition>
        <argsstring>(float percent)</argsstring>
        <name>InvPercent</name>
        <param>
          <type>float</type>
          <declname>percent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="57" column="7" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1aa974ba64ff81c34a3a22dd5ce281a53b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float degreeToRadian</definition>
        <argsstring>(float degree)</argsstring>
        <name>degreeToRadian</name>
        <param>
          <type>float</type>
          <declname>degree</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="62" column="7" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1ac6aac218f5c34155059168a8a42991e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float radianToDegree</definition>
        <argsstring>(float radian)</argsstring>
        <name>radianToDegree</name>
        <param>
          <type>float</type>
          <declname>radian</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="67" column="7" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a3ecb4246bad455a34426463ed71138ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void allStop</definition>
        <argsstring>()</argsstring>
        <name>allStop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="72" column="6" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="72" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a25b81f4eb624260195952455b36b58b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float limitMotorPercent</definition>
        <argsstring>(float percent)</argsstring>
        <name>limitMotorPercent</name>
        <param>
          <type>float</type>
          <declname>percent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="79" column="7" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="79" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a586a637fc7baeb2dd8b25bc39d679596" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setRadSToPercent</definition>
        <argsstring>(float motor1_RadS, float motor2_RadS, float motor3_RadS)</argsstring>
        <name>setRadSToPercent</name>
        <param>
          <type>float</type>
          <declname>motor1_RadS</declname>
        </param>
        <param>
          <type>float</type>
          <declname>motor2_RadS</declname>
        </param>
        <param>
          <type>float</type>
          <declname>motor3_RadS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="91" column="6" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="91" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1ac1c2c79c14f546a6ca7e404a409f43cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float inchestoMeters</definition>
        <argsstring>(float num)</argsstring>
        <name>inchestoMeters</name>
        <param>
          <type>float</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="115" column="7" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="115" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a89eb642168c6696d597908e35d7505d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float countsToRadDisp</definition>
        <argsstring>(int newCount, int old)</argsstring>
        <name>countsToRadDisp</name>
        <param>
          <type>int</type>
          <declname>newCount</declname>
        </param>
        <param>
          <type>int</type>
          <declname>old</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="119" column="7" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="119" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1aebf6e9ebd50eeaedcb5edcb760974a8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int getCdsColor</definition>
        <argsstring>(bool start)</argsstring>
        <name>getCdsColor</name>
        <param>
          <type>bool</type>
          <declname>start</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="124" column="5" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="124" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a07341a45e3c97a4b40b97caf0ce147f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PIMoveTo</definition>
        <argsstring>(char *fName, int size, bool preload)</argsstring>
        <name>PIMoveTo</name>
        <param>
          <type>char *</type>
          <declname>fName</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>preload</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Uses a PI controller to move the robot using a trajectory profile as the reference data. The passed in trajectory profile should have 6 columns. The first 3 are the total angular displacements(rad) of motors 1, 2, and 3 repsectively, with the last 3 being the respective angular velocities(rad/s). The delta time is 0.1 seconds. The loop each iteration will calculate difference in encoder counts to convert it into displacement in radians using countsToRadDisp. This will then be added to the total angular displacement for each motor, and these calculated values will be subracted with the reference angular displacements to get the error for each motor. These errors are then summed to the motors individual total error counter, and based on the error values and P &amp; I constants, angular velocities(rad/s) to set the motors to is calculated. Then the funtion setRadSToPercent is called to convert the angular speeds to percent and limit them within operating range, and then set the motors to that percent.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fName</parametername>
</parameternamelist>
<parameterdescription>
<para>the file name of trajectory profile. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of lines/commands in trajectory profile. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>preload</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, the file will be preloaded and won&apos;t start until the start light turns on. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="163" column="6" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="163" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a1a235440a3e5a042a924080da0bcb5d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rotateCC</definition>
        <argsstring>(float percent, int degree)</argsstring>
        <name>rotateCC</name>
        <param>
          <type>float</type>
          <declname>percent</declname>
        </param>
        <param>
          <type>int</type>
          <declname>degree</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="318" column="6" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="318" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1af3f6a49c913ef91aedc59939aab16da9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void moveForward</definition>
        <argsstring>(float percent, float inch)</argsstring>
        <name>moveForward</name>
        <param>
          <type>float</type>
          <declname>percent</declname>
        </param>
        <param>
          <type>float</type>
          <declname>inch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="331" column="6" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="331" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a0af4c9b7fb9aceed0ecc52eba6b8f849" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void performance1</definition>
        <argsstring>()</argsstring>
        <name>performance1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="343" column="6" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="343" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a224bb88e1730b94a82b89025128d3e69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sinkDump</definition>
        <argsstring>()</argsstring>
        <name>sinkDump</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="388" column="6" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="388" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1ae84739b4949b4f39f1cd1e08961f791a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void forward23</definition>
        <argsstring>(float percent, int inch)</argsstring>
        <name>forward23</name>
        <param>
          <type>float</type>
          <declname>percent</declname>
        </param>
        <param>
          <type>int</type>
          <declname>inch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Moves forward in the direction of motors 2 &amp; 3 for the given inch distance</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>percent</parametername>
</parameternamelist>
<parameterdescription>
<para>the power for motors 2 &amp; 3. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inch</parametername>
</parameternamelist>
<parameterdescription>
<para>the distance to move. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="405" column="6" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="405" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1aa4327f8b5660d8e773d3f02938b23f12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void forward31</definition>
        <argsstring>(float percent, float inch)</argsstring>
        <name>forward31</name>
        <param>
          <type>float</type>
          <declname>percent</declname>
        </param>
        <param>
          <type>float</type>
          <declname>inch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Moves forward in the direction of motors 3 &amp; 1 for the given inch distance</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>percent</parametername>
</parameternamelist>
<parameterdescription>
<para>the power for motors 3 &amp; 1. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inch</parametername>
</parameternamelist>
<parameterdescription>
<para>the distance to move. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="423" column="6" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="423" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1af5ca6b1762d5cdf23eb66c3ec340adf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void forward12</definition>
        <argsstring>(float percent, float inch)</argsstring>
        <name>forward12</name>
        <param>
          <type>float</type>
          <declname>percent</declname>
        </param>
        <param>
          <type>float</type>
          <declname>inch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Moves forward in the direction of motors 1 &amp; 2 for the given inch distance</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>percent</parametername>
</parameternamelist>
<parameterdescription>
<para>the power for motors 1 &amp; 2. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inch</parametername>
</parameternamelist>
<parameterdescription>
<para>the distance to move. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="441" column="6" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="441" bodyend="451"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a38089ce27f210deca1a38d226a747855" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void forwardX</definition>
        <argsstring>(float percent, float inch)</argsstring>
        <name>forwardX</name>
        <param>
          <type>float</type>
          <declname>percent</declname>
        </param>
        <param>
          <type>float</type>
          <declname>inch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="453" column="6" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="453" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1ae5bd314df3ae254ceb9481fd4af2ce7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void correctHeading</definition>
        <argsstring>(float finalHeading, float power)</argsstring>
        <name>correctHeading</name>
        <param>
          <type>float</type>
          <declname>finalHeading</declname>
        </param>
        <param>
          <type>float</type>
          <declname>power</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="466" column="6" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="466" bodyend="488"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a8962486ab0be7e273fd1c0b401294872" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RPSCorrectError</definition>
        <argsstring>(float finalX, float finalY, float finalHeading)</argsstring>
        <name>RPSCorrectError</name>
        <param>
          <type>float</type>
          <declname>finalX</declname>
        </param>
        <param>
          <type>float</type>
          <declname>finalY</declname>
        </param>
        <param>
          <type>float</type>
          <declname>finalHeading</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="490" column="6" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="490" bodyend="543"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a2f865f9d5e98df3241344e5c7cc673df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void performance2</definition>
        <argsstring>()</argsstring>
        <name>performance2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="545" column="6" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="545" bodyend="591"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a9a5ebd1e619e865520f45161acd55202" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void performance3</definition>
        <argsstring>()</argsstring>
        <name>performance3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="593" column="6" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="593" bodyend="636"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a1e2eff555ff99168334a46dc9760e8aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void leverDown</definition>
        <argsstring>()</argsstring>
        <name>leverDown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="638" column="6" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="638" bodyend="642"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a3011bf24b5b470c9afe17dd242708556" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void actual</definition>
        <argsstring>()</argsstring>
        <name>actual</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="644" column="6" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="644" bodyend="780"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a8e3c66e8a0a086c7545e461b8423d26d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setupRPS</definition>
        <argsstring>()</argsstring>
        <name>setupRPS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="782" column="6" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="782" bodyend="848"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a840291bc02cba5474a4cb46a9b9566fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(void)</argsstring>
        <name>main</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" line="850" column="5" bodyfile="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp" bodystart="850" bodyend="875"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;FEHLCD.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;FEHUtility.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;FEHBuzzer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;FEHRPS.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;FEHSD.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;FEHServo.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;FEHMotor.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;FEHIO.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;FEHSD.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOTOR_ANGLE_1<sp/>0.0*M_PI/180.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOTOR_ANGLE_2<sp/>120*M_PI/180.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MOTOR_ANGLE_3<sp/>240*M_PI/180.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_RPM<sp/>236.5398195</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENCODER_RES<sp/>318.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DELTA_T<sp/>0.1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COUNTS_PER_INCH<sp/>35</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ERROR_MARGIN<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DIST_ERROR_MARGIN<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_CORR_ITERATIONS<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RPS_POS_CORR_SPEED<sp/>25</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RPS_HEAD_CORR_SPEED<sp/>35</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>RPS_RAMP_START_X<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>RPS_RAMP_START_Y<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>RPS_RAMP_START_HEADING<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>RPS_LEVERS_X<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>RPS_LEVERS_Y<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>RPS_LEVERS_HEADING<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>RPS_BURGER_X<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>RPS_BURGER_Y<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>forwardTimeOut<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">FEHMotor<sp/>motor1(FEHMotor::Motor0,<sp/>9.0);</highlight></codeline>
<codeline lineno="40"><highlight class="normal">FEHMotor<sp/>motor2(FEHMotor::Motor1,<sp/>9.0);</highlight></codeline>
<codeline lineno="41"><highlight class="normal">FEHMotor<sp/>motor3(FEHMotor::Motor2,<sp/>9.0);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">DigitalEncoder<sp/>motor1_encoder(FEHIO::P0_0);</highlight></codeline>
<codeline lineno="44"><highlight class="normal">DigitalEncoder<sp/>motor2_encoder(FEHIO::P0_2);</highlight></codeline>
<codeline lineno="45"><highlight class="normal">DigitalEncoder<sp/>motor3_encoder(FEHIO::P0_4);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>NEVER<sp/>SET<sp/>ARM<sp/>SERVO<sp/>DEGREE<sp/>ABOVE<sp/>150<sp/>AND<sp/>BELOW<sp/>10!!!*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">FEHServo<sp/>jukebox_servo(FEHServo::Servo0);</highlight></codeline>
<codeline lineno="49"><highlight class="normal">FEHServo<sp/>arm_servo(FEHServo::Servo1);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">AnalogInputPin<sp/>CdS_cell(FEHIO::P0_6);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>errorCurr1<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>errorCurr2<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>errorCurr3<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>InvPercent(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>percent)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>percent<sp/>*<sp/>-1.0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/>convert<sp/>degrees<sp/>from<sp/>RPS<sp/>to<sp/>radian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>degreeToRadian(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>degree)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>degree<sp/>*<sp/>M_PI/180.0;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>convert<sp/>degrees<sp/>from<sp/>RPS<sp/>to<sp/>radian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radianToDegree(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radian)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>radian<sp/>*<sp/>180.0/M_PI;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Stops<sp/>all<sp/>motors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>allStop()<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>motor1.Stop();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>motor2.Stop();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>motor3.Stop();</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Limits<sp/>motor<sp/>percent<sp/>to<sp/>be<sp/>within<sp/>operating<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>limitMotorPercent(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>percent)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(percent<sp/>&gt;<sp/>100.0)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>100.0;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(percent<sp/>&lt;<sp/>-100.0)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-100.0;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(percent<sp/>&lt;<sp/>1<sp/>&amp;&amp;<sp/>percent<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>percent;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Converts<sp/>radians<sp/>per<sp/>second<sp/>to<sp/>percent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRadSToPercent(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>motor1_RadS,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>motor2_RadS,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>motor3_RadS)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>percent1<sp/>=<sp/>(((60.0/(2*M_PI))*motor1_RadS)/MAX_RPM)<sp/>*<sp/>100;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>percent2<sp/>=<sp/>(((60.0/(2*M_PI))*motor2_RadS)/MAX_RPM)<sp/>*<sp/>100;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>percent3<sp/>=<sp/>(((60.0/(2*M_PI))*motor3_RadS)/MAX_RPM)<sp/>*<sp/>100;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>percent1<sp/>=<sp/>limitMotorPercent(percent1);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>percent2<sp/>=<sp/>limitMotorPercent(percent2);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>percent3<sp/>=<sp/>limitMotorPercent(percent3);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(errorCurr1<sp/>&lt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motor1.SetPercent(percent1);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motor1.SetPercent(InvPercent(percent1));</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(errorCurr2<sp/>&lt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motor2.SetPercent(percent2);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motor2.SetPercent(InvPercent(percent2));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(errorCurr3<sp/>&lt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motor3.SetPercent(percent3);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motor3.SetPercent(InvPercent(percent3));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>inchestoMeters(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>num)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>num/39.37;</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>countsToRadDisp(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newCount,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>old)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>difference<sp/>=<sp/>newCount-old;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)difference*(2.0*M_PI)/ENCODER_RES;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getCdsColor(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>start)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Red</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CdS_cell.Value()<sp/>&lt;<sp/>1.5<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LCD.Clear(RED);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LCD.Clear(FEHLCD::Green);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CdS_cell.Value()<sp/>&lt;<sp/>1.1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LCD.Clear(RED);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Blue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LCD.Clear(BLUE);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>Change<sp/>name<sp/>to<sp/>PIMoveTO</highlight></codeline>
<codeline lineno="163"><highlight class="comment"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PIMoveTo(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>preload)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>important<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>countNew1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>countNew2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>countNew3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>countOld1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>countOld2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>countOld3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>displacement1<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>displacement2<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>displacement3<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>refSpeed1;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>refSpeed2;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>refSpeed3;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>phi1<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>phi2<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>phi3<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>motorSpeed1<sp/>=<sp/>0.0;<sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>motorSpeed2<sp/>=<sp/>0.0;<sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>motorSpeed3<sp/>=<sp/>0.0;<sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>errorTotal1<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>errorTotal2<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>errorTotal3<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Kp<sp/>=<sp/>20.0;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Ki<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>trajectory<sp/>profile<sp/>from<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>FEHFile<sp/>*fptr<sp/>=<sp/>SD.FOpen(fName,</highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Open<sp/>write<sp/>files<sp/>to<sp/>track<sp/>error<sp/>and<sp/>delta<sp/>angular<sp/>displacement<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>useful<sp/>for<sp/>tuning<sp/>among<sp/>other<sp/>things</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>FEHFile<sp/>*fOutErrptr<sp/>=<sp/>SD.FOpen(</highlight><highlight class="stringliteral">&quot;errorLog.txt&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>FEHFile<sp/>*fOutDispptr<sp/>=<sp/>SD.FOpen(</highlight><highlight class="stringliteral">&quot;dispLog.txt&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>FEHFile<sp/>*fOutVelptr<sp/>=<sp/>SD.FOpen(</highlight><highlight class="stringliteral">&quot;velLog.txt&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Init<sp/>2d<sp/>arrays<sp/>to<sp/>store<sp/>reference<sp/>data<sp/>and<sp/>other<sp/>temp<sp/>variables<sp/>to<sp/>read<sp/>from<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pos_ref[3][size];</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>vel_ref[3][size];</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>refPos1;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>refPos2;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>refPos3;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>file<sp/>failed<sp/>to<sp/>open,<sp/>or<sp/>invalid<sp/>profile,<sp/>return<sp/>and<sp/>make<sp/>the<sp/>screen<sp/>red<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(SD.FEof(fptr))<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LCD.Clear(FEHLCD::Red);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Parse<sp/>trajectory<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!SD.FEof(fptr))<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SD.FScanf(fptr,<sp/></highlight><highlight class="stringliteral">&quot;%f%f%f%f%f%f&quot;</highlight><highlight class="normal">,<sp/>&amp;refPos1,<sp/>&amp;refPos2,<sp/>&amp;refPos3,<sp/>&amp;refSpeed1,<sp/>&amp;refSpeed2,<sp/>&amp;refSpeed3);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos_ref[0][i]<sp/>=<sp/>refPos1;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos_ref[1][i]<sp/>=<sp/>refPos2;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos_ref[2][i]<sp/>=<sp/>refPos3;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel_ref[0][i]<sp/>=<sp/>refSpeed1;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel_ref[1][i]<sp/>=<sp/>refSpeed2;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel_ref[2][i]<sp/>=<sp/>refSpeed3;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>&lt;<sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LCD.Clear(FEHLCD::Red);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>size<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Close<sp/>trajectory<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>SD.FClose(fptr);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PRELOAD<sp/>LOOP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(preload)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>green<sp/>to<sp/>show<sp/>it&apos;s<sp/>ready</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LCD.Clear(FEHLCD::Green);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(getCdsColor(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>==<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>wait<sp/>until<sp/>a<sp/>light<sp/>turns<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>encoder<sp/>counts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>motor1_encoder.ResetCounts();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>motor2_encoder.ResetCounts();</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>motor3_encoder.ResetCounts();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PI<sp/>LOOP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Yes,<sp/>not<sp/>PID<sp/>as<sp/>the<sp/>derivative<sp/>term<sp/>isn&apos;t<sp/>needed<sp/>currently</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>new<sp/>encoder<sp/>counts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>countNew1<sp/>=<sp/>motor1_encoder.Counts();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>countNew2<sp/>=<sp/>motor2_encoder.Counts();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>countNew3<sp/>=<sp/>motor3_encoder.Counts();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(errorCurr1<sp/>&lt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>displacement1<sp/>=<sp/>countsToRadDisp(countNew1,<sp/>countOld1)<sp/>*<sp/>-1;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>displacement1<sp/>=<sp/>countsToRadDisp(countNew1,<sp/>countOld1);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(errorCurr2<sp/>&lt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>displacement2<sp/>=<sp/>countsToRadDisp(countNew2,<sp/>countOld2)<sp/>*<sp/>-1;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>displacement2<sp/>=<sp/>countsToRadDisp(countNew2,<sp/>countOld2);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(errorCurr3<sp/>&lt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>displacement3<sp/>=<sp/>countsToRadDisp(countNew3,<sp/>countOld3)<sp/>*<sp/>-1;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>displacement3<sp/>=<sp/>countsToRadDisp(countNew3,<sp/>countOld3);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>old<sp/>counts<sp/>to<sp/>new<sp/>counts<sp/>for<sp/>the<sp/>next<sp/>iteration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>countOld1<sp/>=<sp/>countNew1;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>countOld2<sp/>=<sp/>countNew2;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>countOld3<sp/>=<sp/>countNew3;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>to<sp/>total<sp/>angular<sp/>displacement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi1<sp/>+=<sp/>displacement1;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi2<sp/>+=<sp/>displacement2;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi3<sp/>+=<sp/>displacement3;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>to<sp/>log<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SD.FPrintf(fOutDispptr,<sp/></highlight><highlight class="stringliteral">&quot;%f\t%f\t%f\n&quot;</highlight><highlight class="normal">,<sp/>displacement1,<sp/>displacement2,<sp/>displacement3);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>current<sp/>error<sp/>relative<sp/>to<sp/>reference<sp/>angular<sp/>positions<sp/>for<sp/>each<sp/>encoder<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorCurr1<sp/>=<sp/>pos_ref[0][i]<sp/>-<sp/>phi1;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorCurr2<sp/>=<sp/>pos_ref[1][i]<sp/>-<sp/>phi2;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorCurr3<sp/>=<sp/>pos_ref[2][i]<sp/>-<sp/>phi3;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Saftey<sp/>check<sp/>in<sp/>case<sp/>something<sp/>goes<sp/>terribly<sp/>wrong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(errorCurr1<sp/>&gt;<sp/>3)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>errors<sp/>to<sp/>log<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SD.FPrintf(fOutErrptr,<sp/></highlight><highlight class="stringliteral">&quot;%f\t%f\t%f\n&quot;</highlight><highlight class="normal">,<sp/>errorCurr1,<sp/>errorCurr2,<sp/>errorCurr3);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>to<sp/>total<sp/>error<sp/>(for<sp/>integral<sp/>term)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorTotal1<sp/>+=<sp/>errorCurr1;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorTotal2<sp/>+=<sp/>errorCurr2;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorTotal3<sp/>+=<sp/>errorCurr3;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calc<sp/>motor<sp/>speeds<sp/>(rad/s)<sp/>using<sp/>P<sp/>and<sp/>I<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motorSpeed1<sp/>=<sp/>Kp<sp/>*<sp/>errorCurr1<sp/>+<sp/>Ki<sp/>*<sp/>DELTA_T<sp/>*<sp/>(errorTotal1);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motorSpeed2<sp/>=<sp/>Kp<sp/>*<sp/>errorCurr2<sp/>+<sp/>Ki<sp/>*<sp/>DELTA_T<sp/>*<sp/>(errorTotal2);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motorSpeed3<sp/>=<sp/>Kp<sp/>*<sp/>errorCurr3<sp/>+<sp/>Ki<sp/>*<sp/>DELTA_T<sp/>*<sp/>(errorTotal3);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Use<sp/>the<sp/>reference<sp/>velocities<sp/>to<sp/>determine<sp/>if<sp/>motor<sp/>speed<sp/>should<sp/>change<sp/>signs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vel_ref[0][i]<sp/>&lt;<sp/>0.0<sp/>||<sp/>(errorCurr1<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>motorSpeed1<sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motorSpeed1<sp/>*=<sp/>-1.0;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vel_ref[1][i]<sp/>&lt;<sp/>0.0<sp/>||<sp/>(errorCurr2<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>motorSpeed2<sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motorSpeed2<sp/>*=<sp/>-1.0;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vel_ref[2][i]<sp/>&lt;<sp/>0.0<sp/>||<sp/>(errorCurr3<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>motorSpeed3<sp/>&lt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motorSpeed3<sp/>*=<sp/>-1.0;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SD.FPrintf(fOutVelptr,<sp/></highlight><highlight class="stringliteral">&quot;%f\t%f\t%f\n&quot;</highlight><highlight class="normal">,<sp/>motorSpeed1,<sp/>motorSpeed2,<sp/>motorSpeed3);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>motors<sp/>to<sp/>speed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setRadSToPercent(motorSpeed1,<sp/>motorSpeed2,<sp/>motorSpeed3);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>0.1<sp/>seconds<sp/>(100<sp/>miliseconds)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sleep(100);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Done<sp/>with<sp/>trajectory<sp/>profile,<sp/>stop<sp/>all<sp/>motors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>allStop();</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Close<sp/>all<sp/>log<sp/>files<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>SD.FClose(fOutErrptr);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>SD.FClose(fOutDispptr);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>SD.FClose(fOutVelptr);</highlight></codeline>
<codeline lineno="316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rotateCC(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>percent,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>degree)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>motor1_encoder.ResetCounts();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>motor2_encoder.ResetCounts();</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>motor3_encoder.ResetCounts();</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>motor1.SetPercent(InvPercent(percent));</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>motor2.SetPercent(InvPercent(percent));</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>motor3.SetPercent(InvPercent(percent));</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((motor1_encoder.Counts()<sp/>+<sp/>motor2_encoder.Counts()+<sp/>motor3_encoder.Counts())/3&lt;<sp/>2.69420*degree);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>allStop();</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>moveForward(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>percent,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>inch)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>motor1_encoder.ResetCounts();</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>motor2_encoder.ResetCounts();</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>motor3_encoder.ResetCounts();</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>motor1.SetPercent(InvPercent(percent));</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>motor2.SetPercent(percent);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((motor1_encoder.Counts()<sp/>+<sp/>motor2_encoder.Counts())/2&lt;<sp/>35*inch);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>allStop();</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>performance1()<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>moveForward(25,<sp/>18);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>allStop();</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>Cds<sp/>Cell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cdsValue<sp/>=<sp/>getCdsColor(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(1.5);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>blue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cdsValue<sp/>==<sp/>1)<sp/><sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rotateCC(25,<sp/>106);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sleep(1.5);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>moveForward(25,<sp/>4);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>red</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cdsValue<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>moveForward(25,<sp/>3);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sleep(1.5);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rotateCC(25,<sp/>107);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sleep(1.5);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>moveForward(25,<sp/>5.25);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(1.5);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>backward<sp/>from<sp/>jukebox</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>moveForward(-25,<sp/>6);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>jukebox_servo.SetDegree(5.0);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(0.5);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rotate<sp/>to<sp/>align<sp/>heading<sp/>to<sp/>ramp<sp/>starting<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>rotateCC(25,<sp/>90);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(0.5);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>forward<sp/>to<sp/>ramp<sp/>starting<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cdsValue<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>moveForward(25,<sp/>6);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cdsValue<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>moveForward(25,<sp/>10);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(0.5);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rotate<sp/>towards<sp/>ramp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>rotateCC(25,<sp/>90);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(0.5);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Go<sp/>up<sp/>ramp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>moveForward(75,<sp/>30);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(0.5);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>moveForward(-25,<sp/>30);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(0.5);</highlight></codeline>
<codeline lineno="386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sinkDump()<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>45;<sp/>i<sp/>&lt;=<sp/>140;<sp/>i+=5)<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arm_servo.SetDegree(i);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sleep(100);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>140;<sp/>i<sp/>&gt;=<sp/>45;<sp/>i-=5)<sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arm_servo.SetDegree(i);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sleep(100);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal">}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>forward23(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>percent,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inch)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>start<sp/>=<sp/>TimeNow();</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>motor1_encoder.ResetCounts();</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>motor2_encoder.ResetCounts();</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>motor3_encoder.ResetCounts();</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>motor2.SetPercent(InvPercent(percent));</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>motor3.SetPercent(percent);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(TimeNow()<sp/>-<sp/>start<sp/>&lt;<sp/>forwardTimeOut<sp/>&amp;&amp;<sp/>(motor2_encoder.Counts()<sp/>+<sp/>motor3_encoder.Counts())/2&lt;<sp/>COUNTS_PER_INCH*inch);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>allStop();</highlight></codeline>
<codeline lineno="415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>forward31(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>percent,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>inch)<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>start<sp/>=<sp/>TimeNow();</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>motor1_encoder.ResetCounts();</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>motor2_encoder.ResetCounts();</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>motor3_encoder.ResetCounts();</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>motor3.SetPercent(InvPercent(percent));</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>motor1.SetPercent(percent);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(TimeNow()<sp/>-<sp/>start<sp/>&lt;<sp/>forwardTimeOut<sp/>&amp;&amp;<sp/>(motor1_encoder.Counts()<sp/>+<sp/>motor3_encoder.Counts())/2&lt;<sp/>COUNTS_PER_INCH*inch);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>allStop();</highlight></codeline>
<codeline lineno="433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>forward12(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>percent,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>inch)<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>start<sp/>=<sp/>TimeNow();</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>motor1_encoder.ResetCounts();</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>motor2_encoder.ResetCounts();</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>motor3_encoder.ResetCounts();</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>motor1.SetPercent(InvPercent(percent));</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>motor2.SetPercent(percent);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(TimeNow()<sp/>-<sp/>start<sp/>&lt;<sp/>forwardTimeOut<sp/>&amp;&amp;<sp/>(motor1_encoder.Counts()<sp/>+<sp/>motor2_encoder.Counts())/2&lt;<sp/>COUNTS_PER_INCH*inch);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>allStop();</highlight></codeline>
<codeline lineno="451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>forwardX(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>percent,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>inch)<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>start<sp/>=<sp/>TimeNow();</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>motor1_encoder.ResetCounts();</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>motor2_encoder.ResetCounts();</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>motor3_encoder.ResetCounts();</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>motor1.SetPercent(percent/2.0);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>motor2.SetPercent(percent/2.0);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>motor3.SetPercent(InvPercent(percent));</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(TimeNow()<sp/>-<sp/>start<sp/>&lt;<sp/>forwardTimeOut<sp/>&amp;&amp;<sp/>motor3_encoder.Counts()<sp/>&lt;<sp/>COUNTS_PER_INCH*inch);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>allStop();</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>correctHeading(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>finalHeading,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>power)<sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>currHeading;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>currHeading<sp/>=<sp/>RPS.Heading();</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(currHeading<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currHeading<sp/>=<sp/>RPS.Heading();</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LCD.Clear(FEHLCD::Red);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sleep(50);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle<sp/>=<sp/>fabsf(finalHeading<sp/>-<sp/>currHeading);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(angle<sp/>&lt;<sp/>180)<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currHeading<sp/>&gt;<sp/>finalHeading)<sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power<sp/>*=<sp/>-1.0;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>angle<sp/>=<sp/>360<sp/>-<sp/>angle;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currHeading<sp/>&lt;<sp/>finalHeading)<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power<sp/>*=<sp/>-1.0;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>rotateCC(power,<sp/>angle);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(100);</highlight></codeline>
<codeline lineno="488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RPSCorrectError(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>finalX,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>finalY,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>finalHeading)<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>currHeading<sp/>=<sp/>RPS.Heading();</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>currX<sp/>=<sp/>RPS.X();</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>currY<sp/>=<sp/>RPS.Y();</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>deltaX<sp/>=<sp/>finalX<sp/>-<sp/>currX;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(deltaX<sp/>==<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deltaX<sp/>+=<sp/>0.0000000000000000000001;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>deltaY<sp/>=<sp/>finalY<sp/>-<sp/>currY;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(deltaY<sp/>==<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deltaY<sp/>+=<sp/>0.0000000000000000000001;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>theta;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Q1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(deltaX<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>deltaY<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theta<sp/>=<sp/>radianToDegree(atan((deltaY)/(deltaX)));</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Q2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(deltaX<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>deltaY<sp/>&gt;=0)<sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theta<sp/>=<sp/>radianToDegree(atan((-1.0*deltaX)/(deltaY)));</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theta<sp/>+=<sp/>90.0;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Q3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(deltaX<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>deltaY<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theta<sp/>=<sp/>radianToDegree(atan((-1.0*deltaY)/(-1.0*deltaX)));</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theta<sp/>+=<sp/>180;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Q4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theta<sp/>=<sp/>radianToDegree(atan((deltaX)/(-1.0*deltaY)));</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theta<sp/>+=<sp/>270;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>THIS<sp/>IS<sp/>PROB<sp/>WRONG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>deltaTheta<sp/>=<sp/>fabsf(currHeading<sp/>-<sp/>theta);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deltaTheta<sp/>&gt;<sp/>180)<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deltaTheta<sp/>=<sp/>360<sp/>-<sp/>deltaTheta;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>power<sp/>=<sp/>20.0;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(deltaTheta<sp/>&lt;<sp/>90.0)<sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>correctHeading(deltaTheta,<sp/>18.0);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deltaTheta<sp/>+=<sp/>180.0;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(deltaTheta<sp/>&gt;<sp/>360.0)<sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deltaTheta<sp/>-=<sp/>360;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>correctHeading(deltaTheta,<sp/>18.0);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power<sp/>=<sp/>-20.0;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dist<sp/>=<sp/>sqrtf(deltaX<sp/>*<sp/>deltaX<sp/>+<sp/>deltaY<sp/>*<sp/>deltaY);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>forward12(power,<sp/>dist);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>correctHeading(finalHeading,<sp/>18.0);</highlight></codeline>
<codeline lineno="543"><highlight class="normal">}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>performance2()<sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>arm_servo.SetDegree(65);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>PIMoveTo(</highlight><highlight class="stringliteral">&quot;start1.txt&quot;</highlight><highlight class="normal">,<sp/>31,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>65;<sp/>i<sp/>&gt;=<sp/>45;<sp/>i-=2)<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arm_servo.SetDegree(i);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sleep(10);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//rotateCC(-25,<sp/>120);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//rotateCC(-25,<sp/>90);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//forward23(75,<sp/>34);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>PIMoveTo(</highlight><highlight class="stringliteral">&quot;mR34.txt&quot;</highlight><highlight class="normal">,<sp/>31,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(0.5);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//PIMoveTo(&quot;r90CW.txt&quot;,<sp/>31);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>rotateCC(-25,<sp/>90);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(0.5);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>PIMoveTo(</highlight><highlight class="stringliteral">&quot;toSink.txt&quot;</highlight><highlight class="normal">,<sp/>31,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(0.5);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//rotateCC(25,<sp/>120);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//PIMoveTo(&quot;toSink.txt&quot;,<sp/>31);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>sinkDump();</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//PIMoveTo(&quot;toSlide.txt&quot;,<sp/>31);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>rotateCC(-25,<sp/>152);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(0.5);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>forward31(25,<sp/>24.0);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>forward31(-25,<sp/>.1);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//PIMoveTo(&quot;rotate6.txt&quot;,<sp/>11,<sp/>false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>rotateCC(-25,<sp/>30);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>arm_servo.SetDegree(90.0);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>jukebox_servo.SetDegree(170.0);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(0.75);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>forward12(25,<sp/>5);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>jukebox_servo.SetDegree(160.0);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(0.5);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>PIMoveTo(</highlight><highlight class="stringliteral">&quot;slideT.txt&quot;</highlight><highlight class="normal">,<sp/>26,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(0.5);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>forward12(-25,<sp/>23);</highlight></codeline>
<codeline lineno="591"><highlight class="normal">}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>performance3()<sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>center<sp/>of<sp/>ramp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>PIMoveTo(</highlight><highlight class="stringliteral">&quot;start1.txt&quot;</highlight><highlight class="normal">,<sp/>31,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//up<sp/>ramp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>PIMoveTo(</highlight><highlight class="stringliteral">&quot;mR34.txt&quot;</highlight><highlight class="normal">,<sp/>31,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//east<sp/>to<sp/>wall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>forward12(-25,<sp/>17);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//west<sp/>off<sp/>wall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//forward12(25,<sp/>1.5);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>forward12(25,<sp/>.75);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//rotate<sp/>towards<sp/>burger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>rotateCC(25,<sp/>22);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//PIMoveTo(&quot;ss.txt&quot;,<sp/>6,<sp/>false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>arm_servo.SetDegree(0);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//north<sp/>towards<sp/>burger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>forward31(25,<sp/>8.1);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>back<sp/>off<sp/>from<sp/>burger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>forward31(-25,<sp/>.15);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>arm_servo.SetDegree(55);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(1.5);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>arm_servo.SetDegree(0);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(1.5);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//south<sp/>from<sp/>burger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>forward31(-25,<sp/>4);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//face<sp/>ice<sp/>cream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>rotateCC(-25,<sp/>23);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>arm_servo.SetDegree(70);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//move<sp/>diagonally<sp/>to<sp/>lever</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>PIMoveTo(</highlight><highlight class="stringliteral">&quot;toLever.txt&quot;</highlight><highlight class="normal">,<sp/>31,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>arm_servo.SetDegree(40);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(1.5);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>arm_servo.SetDegree(70);</highlight></codeline>
<codeline lineno="636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>leverDown()<sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>arm_servo.SetDegree(150);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(750);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>arm_servo.SetDegree(110);</highlight></codeline>
<codeline lineno="642"><highlight class="normal">}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>actual()<sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//go<sp/>from<sp/>start<sp/>to<sp/>jukebox<sp/>light,<sp/>press<sp/>correct<sp/>button,<sp/>go<sp/>to<sp/>from<sp/>of<sp/>ramp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>PIMoveTo(</highlight><highlight class="stringliteral">&quot;toJL.txt&quot;</highlight><highlight class="normal">,<sp/>21,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(100);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cdsValue<sp/>=<sp/>getCdsColor(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>correctHeading(270,<sp/>RPS_HEAD_CORR_SPEED);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cdsValue<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIMoveTo(</highlight><highlight class="stringliteral">&quot;toRed.txt&quot;</highlight><highlight class="normal">,<sp/>61,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIMoveTo(</highlight><highlight class="stringliteral">&quot;rToRamp.txt&quot;</highlight><highlight class="normal">,<sp/>61,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cdsValue<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIMoveTo(</highlight><highlight class="stringliteral">&quot;toBlue.txt&quot;</highlight><highlight class="normal">,<sp/>31,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIMoveTo(</highlight><highlight class="stringliteral">&quot;bToRamp.txt&quot;</highlight><highlight class="normal">,<sp/>31,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//correct<sp/>heading<sp/>and<sp/>X<sp/>before<sp/>ramp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>correctHeading(RPS_RAMP_START_HEADING,<sp/>1.33*RPS_HEAD_CORR_SPEED);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(500);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>currX<sp/>=<sp/>RPS.X();</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OLD:<sp/>18.3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>deltaX<sp/>=<sp/>fabsf(RPS_RAMP_START_X<sp/>-<sp/>currX);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RPS_RAMP_START_X<sp/>&gt;<sp/>currX)<sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward12(RPS_POS_CORR_SPEED,<sp/>deltaX);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward12(-RPS_POS_CORR_SPEED,<sp/>deltaX);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//go<sp/>up<sp/>ramp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>PIMoveTo(</highlight><highlight class="stringliteral">&quot;upRamp3.txt&quot;</highlight><highlight class="normal">,<sp/>31,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//align<sp/>X,<sp/>Y,<sp/>and<sp/>heading<sp/>at<sp/>sink</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(100);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>correctHeading(RPS_RAMP_START_HEADING,<sp/>RPS_HEAD_CORR_SPEED);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(500);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>currY<sp/>=<sp/>RPS.Y();</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>deltaY<sp/>=<sp/>fabsf(41.4<sp/>-<sp/>currY);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(41.4<sp/>&gt;<sp/>currY)<sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forwardX(-RPS_POS_CORR_SPEED,<sp/>deltaY);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forwardX(RPS_POS_CORR_SPEED,<sp/>deltaY);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>correctHeading(0,<sp/>RPS_HEAD_CORR_SPEED);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(500);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>currX<sp/>=<sp/>RPS.X();</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>deltaX<sp/>=<sp/>fabsf(15.5<sp/>-<sp/>currX);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>forwardTimeOut<sp/>=<sp/>1.75;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(15.5<sp/>&gt;<sp/>currX)<sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward12(RPS_POS_CORR_SPEED,<sp/>deltaX);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward12(-RPS_POS_CORR_SPEED,<sp/>deltaX);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>forwardTimeOut<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//throw<sp/>tray</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>arm_servo.SetDegree(60);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(150);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>arm_servo.SetDegree(80);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(50);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>arm_servo.SetDegree(100);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(50);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>arm_servo.SetDegree(120);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(10);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>arm_servo.SetDegree(115);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(10);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>arm_servo.SetDegree(110);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(50);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>correctHeading(0,<sp/>RPS_HEAD_CORR_SPEED);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>arm_servo.SetDegree(80);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(100);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//center<sp/>between<sp/>three<sp/>levers<sp/>from<sp/>side<sp/>of<sp/>sink</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>PIMoveTo(</highlight><highlight class="stringliteral">&quot;toLevers.txt&quot;</highlight><highlight class="normal">,<sp/>31,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>arm_servo.SetDegree(110);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(500);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>currX<sp/>=<sp/>RPS.X();</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OLD<sp/>20.4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>deltaX<sp/>=<sp/>fabsf(RPS_LEVERS_X<sp/>-<sp/>currX);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RPS_LEVERS_X<sp/>&gt;<sp/>currX)<sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward12(RPS_POS_CORR_SPEED,<sp/>deltaX);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward12(-RPS_POS_CORR_SPEED,<sp/>deltaX);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OLD<sp/>345</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>correctHeading(RPS_LEVERS_HEADING,<sp/>RPS_HEAD_CORR_SPEED);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(500);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>currY<sp/>=<sp/>RPS.Y();</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OLD:<sp/>57.2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>deltaY<sp/>=<sp/>fabsf(RPS_LEVERS_Y<sp/>-<sp/>currY);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RPS_LEVERS_Y<sp/>&gt;<sp/>currY)<sp/>{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward23(RPS_POS_CORR_SPEED,<sp/>deltaY);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward23(-RPS_POS_CORR_SPEED,<sp/>deltaY);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//flip<sp/>correct<sp/>lever<sp/>down<sp/>and<sp/>move<sp/>near<sp/>burger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lever<sp/>=<sp/>RPS.GetIceCream();</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lever<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIMoveTo(</highlight><highlight class="stringliteral">&quot;toL1.txt&quot;</highlight><highlight class="normal">,<sp/>31,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leverDown();</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIMoveTo(</highlight><highlight class="stringliteral">&quot;L1toBgr.txt&quot;</highlight><highlight class="normal">,<sp/>31,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lever<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIMoveTo(</highlight><highlight class="stringliteral">&quot;toL2.txt&quot;</highlight><highlight class="normal">,<sp/>31,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leverDown();</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIMoveTo(</highlight><highlight class="stringliteral">&quot;L2toBgr.txt&quot;</highlight><highlight class="normal">,<sp/>31,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIMoveTo(</highlight><highlight class="stringliteral">&quot;toL2.txt&quot;</highlight><highlight class="normal">,<sp/>31,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward31(-35,<sp/>3.75);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leverDown();</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sleep(200);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward31(35,<sp/>3.75);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIMoveTo(</highlight><highlight class="stringliteral">&quot;L2toBgr.txt&quot;</highlight><highlight class="normal">,<sp/>31,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//move<sp/>to<sp/>and<sp/>align<sp/>to<sp/>burger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>arm_servo.SetDegree(8);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>correctHeading(180,<sp/>RPS_HEAD_CORR_SPEED);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(500);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>currX<sp/>=<sp/>RPS.X();</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OLD:<sp/>29.7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>deltaX<sp/>=<sp/>fabsf(RPS_BURGER_X<sp/>-<sp/>currX);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RPS_BURGER_X<sp/>&gt;<sp/>currX)<sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward12(-RPS_POS_CORR_SPEED,<sp/>deltaX);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward12(RPS_POS_CORR_SPEED,<sp/>deltaX);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>correctHeading(200,<sp/>RPS_HEAD_CORR_SPEED);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>forwardTimeOut<sp/>=<sp/>1.75;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(500);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>currY<sp/>=<sp/>RPS.Y();</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>forward31(RPS_POS_CORR_SPEED,<sp/>RPS_BURGER_Y<sp/>-<sp/>currY);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>forwardTimeOut<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//flip<sp/>burger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>arm_servo.SetDegree(85);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(2000);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>arm_servo.SetDegree(8);</highlight></codeline>
<codeline lineno="780"><highlight class="normal">}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setupRPS()<sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(1000);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>trash_x;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>trash_y;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>LCD.Clear(FEHLCD::Black);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>LCD.WriteLine(</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>LCD.WriteLine(</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>LCD.WriteLine(</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>LCD.WriteLine(</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>LCD.WriteLine(</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>LCD.WriteLine(</highlight><highlight class="stringliteral">&quot;TAP<sp/>FOR<sp/>RAMP<sp/>POS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!LCD.Touch(&amp;trash_x,<sp/>&amp;trash_y));</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>Buzzer.Tone(<sp/>FEHBuzzer::G5,<sp/><sp/>300<sp/>);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>RPS_RAMP_START_X<sp/>=<sp/>RPS.X();</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(RPS_RAMP_START_X<sp/>==<sp/>-1.0)<sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RPS_RAMP_START_X<sp/>=<sp/>RPS.X();</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>RPS_RAMP_START_Y<sp/>=<sp/>RPS.Y();</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>RPS_RAMP_START_HEADING<sp/>=<sp/>RPS.Heading();</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>Buzzer.Tone(<sp/>FEHBuzzer::D6,<sp/><sp/>300<sp/>);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(500);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>LCD.Clear(FEHLCD::Gray);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>LCD.WriteLine(</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>LCD.WriteLine(</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>LCD.WriteLine(</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>LCD.WriteLine(</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>LCD.WriteLine(</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>LCD.WriteLine(</highlight><highlight class="stringliteral">&quot;TAP<sp/>FOR<sp/>LEVERS<sp/>POS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!LCD.Touch(&amp;trash_x,<sp/>&amp;trash_y));</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>Buzzer.Tone(<sp/>FEHBuzzer::G5,<sp/><sp/>300<sp/>);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>RPS_LEVERS_X<sp/>=<sp/>RPS.X();</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(RPS_LEVERS_X<sp/>==<sp/>-1.0)<sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RPS_LEVERS_X<sp/>=<sp/>RPS.X();</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>RPS_LEVERS_Y<sp/>=<sp/>RPS.Y();</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>RPS_LEVERS_HEADING<sp/>=<sp/>RPS.Heading();</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>Buzzer.Tone(<sp/>FEHBuzzer::D6,<sp/><sp/>300<sp/>);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(500);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>LCD.Clear(FEHLCD::Scarlet);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>LCD.WriteLine(</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/>LCD.WriteLine(</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>LCD.WriteLine(</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>LCD.WriteLine(</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>LCD.WriteLine(</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>LCD.WriteLine(</highlight><highlight class="stringliteral">&quot;TAP<sp/>FOR<sp/>BURGER<sp/>POS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!LCD.Touch(&amp;trash_x,<sp/>&amp;trash_y));</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>Buzzer.Tone(<sp/>FEHBuzzer::G5,<sp/><sp/>300<sp/>);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>RPS_BURGER_X<sp/>=<sp/>RPS.X();</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(RPS_BURGER_X<sp/>==<sp/>-1.0)<sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RPS_BURGER_X<sp/>=<sp/>RPS.X();</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>RPS_BURGER_Y<sp/>=<sp/>RPS.Y();</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>Buzzer.Tone(<sp/>FEHBuzzer::D6,<sp/><sp/>300<sp/>);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>Sleep(500);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>LCD.Clear(FEHLCD::Blue);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>LCD.WriteLine(</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>LCD.WriteLine(</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>LCD.WriteLine(</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>LCD.WriteLine(</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>LCD.WriteLine(</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>LCD.WriteLine(</highlight><highlight class="stringliteral">&quot;TAP<sp/>TO<sp/>LOAD&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!LCD.Touch(&amp;trash_x,<sp/>&amp;trash_y));</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>Buzzer.Tone(<sp/>FEHBuzzer::G5,<sp/><sp/>300<sp/>);</highlight></codeline>
<codeline lineno="848"><highlight class="normal">}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="851"><highlight class="normal">{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>jukebox_servo.SetMin(700);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>jukebox_servo.SetMax(2380);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>arm_servo.SetMin(508);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>arm_servo.SetMax(2464);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>arm_servo.SetDegree(8);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>jukebox_servo.SetDegree(5.0);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>motor1_encoder.ResetCounts();</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/>motor2_encoder.ResetCounts();</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>motor3_encoder.ResetCounts();</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>RPS.InitializeTouchMenu();</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>setupRPS();</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>arm_servo.SetDegree(45);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>actual();</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LCD.Write(RPS.X());</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LCD.Write(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LCD.Write(RPS.Y());</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LCD.Write(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LCD.WriteLine(RPS.Heading());</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="875"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/aqchen/Documents/OSU/1282/FEHRobot/main.cpp"/>
  </compounddef>
</doxygen>
